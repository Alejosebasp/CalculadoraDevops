name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and repackage with Spring Boot
        run: mvn clean package spring-boot:repackage -DskipTests

      - name: Build Docker image
        run: docker build -t spring-app .

      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name app spring-app

      - name: Wait for app to be ready
        run: |
          for i in {1..15}; do
            if curl -s http://localhost:8080; then
              echo "App is up ✅"
              exit 0
            else
              echo "Waiting for app... attempt $i"
              sleep 5
            fi
          done
          echo "App did not start in time ❌"
          docker logs app
          exit 1

      - name: Descargar e instalar ngrok (v3)
        run: |
          curl -sL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt-get update && sudo apt-get install ngrok

      - name: Autenticarse con ngrok
        run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Iniciar ngrok
        run: |
          nohup ngrok http 8080 > ngrok.log &
          sleep 5

      - name: Obtener URL del túnel
        run: |
          echo "Esperando a que ngrok genere la URL del túnel..."
          for i in {1..10}; do
            tunnel_url=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
            if [[ "$tunnel_url" != "null" && -n "$tunnel_url" ]]; then
              echo "La URL del túnel es: $tunnel_url"
              echo "NGROK_TUNNEL_URL=$tunnel_url" >> $GITHUB_ENV
              break
            else
              echo "Esperando por la URL del túnel... Intento $i"
              sleep 3
            fi
          done

      - name: Verificar URL del túnel
        run: |
          echo "URL del túnel almacenada: $NGROK_TUNNEL_URL"

      - name: Test calculadora endpoint
        run: |
          if [ -z "$NGROK_TUNNEL_URL" ]; then
            echo "Error: La URL del túnel no está disponible."
            exit 1
          fi
          echo "Probando endpoint /api/calculadora/sumar?a=5&b=7"
          curl -v "$NGROK_TUNNEL_URL/api/calculadora/sumar?a=5&b=7"

      - name: Mostrar logs del contenedor
        run: docker logs app || echo "No se pudieron obtener los logs del contenedor"

